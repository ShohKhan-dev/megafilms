{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Web\\\\MoviesUp\\\\megafilms\\\\src\\\\Pages\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { Button, createMuiTheme, Tab, Tabs, TextField, ThemeProvider } from \"@material-ui/core\";\nimport \"../Pages.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\"\n      }\n    }\n  });\n\n  const fetchSearch = async () => {\n    try {\n      const mytype = \"movie\";\n\n      if (type === 0) {\n        const mytype = \"movie\";\n      } else if (type === 1) {\n        const mytype = \"tv\";\n      } else {\n        const mytype = \"person\";\n      }\n\n      const {\n        data\n      } = await axios.get(`https://api.themoviedb.org/3/search/${mytype}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n      setContent(data.results);\n      setNumOfPages(data.total_pages); // console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch(); // eslint-disable-next-line\n  }, [type, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"What are you looking for?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            flex: 1\n          },\n          className: \"searchBox\",\n          label: \"Search\",\n          variant: \"filled\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: fetchSearch,\n          variant: \"contained\",\n          style: {\n            marginLeft: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: type,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        onChange: (event, newValue) => {\n          setType(newValue);\n          setPage(1);\n        },\n        style: {\n          paddingBottom: 5\n        },\n        \"aria-label\": \"disabled tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"33%\"\n          },\n          label: \"Search Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"33%\"\n          },\n          label: \"Search TV Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"33%\"\n          },\n          label: \"People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: type ? \"tv\" : \"movie\",\n        vote_average: c.vote_average,\n        vote_count: c.vote_count\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)), searchText && !content && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Series Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 46\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"mGq/hCJqpmPMBVLbCYScLl1qC3o=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Projects/Web/MoviesUp/megafilms/src/Pages/Search/Search.js"],"names":["Button","createMuiTheme","Tab","Tabs","TextField","ThemeProvider","SearchIcon","useEffect","useState","axios","CustomPagination","SingleContent","Search","type","setType","searchText","setSearchText","page","setPage","content","setContent","numOfPages","setNumOfPages","darkTheme","palette","primary","main","fetchSearch","mytype","data","get","process","env","REACT_APP_API_KEY","results","total_pages","error","console","window","scroll","flex","e","target","value","marginLeft","event","newValue","paddingBottom","width","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average","vote_count"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  createMuiTheme,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport \"../Pages.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\n\r\nconst Search = () => {\r\n  const [type, setType] = useState(0);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const fetchSearch = async () => {\r\n    try {\r\n      const mytype = \"movie\";\r\n      if (type === 0){\r\n        const mytype = \"movie\";\r\n      }\r\n      else if (type === 1){\r\n        const mytype = \"tv\";\r\n      }\r\n      else{\r\n        const mytype = \"person\";\r\n      }\r\n      const { data } = await axios.get(\r\n        `https://api.themoviedb.org/3/search/${mytype}?api_key=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&language=en-US&query=${searchText}&page=${page}&include_adult=false`\r\n      );\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchSearch();\r\n    // eslint-disable-next-line\r\n  }, [type, page]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"pageTitle\">What are you looking for?</span>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <div className=\"search\">\r\n          <TextField\r\n            style={{ flex: 1 }}\r\n            className=\"searchBox\"\r\n            label=\"Search\"\r\n            variant=\"filled\"\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            \r\n            \r\n          />\r\n          <Button\r\n            onClick={fetchSearch}\r\n            variant=\"contained\"\r\n            style={{ marginLeft: 10 }}\r\n          >\r\n            <SearchIcon fontSize=\"large\" />\r\n          </Button>\r\n        </div>\r\n        <Tabs\r\n          value={type}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={(event, newValue) => {\r\n            setType(newValue);\r\n            setPage(1);\r\n          }}\r\n          style={{ paddingBottom: 5 }}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab style={{ width: \"33%\" }} label=\"Search Movies\" />\r\n          <Tab style={{ width: \"33%\" }} label=\"Search TV Series\" />\r\n          <Tab style={{ width: \"33%\" }} label=\"People\" />\r\n        </Tabs>\r\n      </ThemeProvider>\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type={type ? \"tv\" : \"movie\"}\r\n              vote_average={c.vote_average}\r\n              vote_count={c.vote_count}\r\n            />\r\n          ))}\r\n        {searchText &&\r\n          !content &&\r\n          (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}