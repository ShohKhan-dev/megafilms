{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Web\\\\MoviesUp\\\\react-entertainment-hub\\\\src\\\\Pages\\\\Series\\\\Series.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"../Pages.css\";\nimport { useEffect, useState } from \"react\";\nimport Genres from \"../../components/Genres/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport useGenre from \"../../hooks/useGenre\";\nimport TvIcon from \"@material-ui/icons/Tv\";\n\nconst Series = () => {\n  _s();\n\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres);\n\n  const fetchSeries = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages); // console.log(data);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSeries(); // eslint-disable-next-line\n  }, [genreforURL, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: [/*#__PURE__*/_jsxDEV(TvIcon, {\n        className: \"star-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 35\n      }, this), \"Discover Series\", /*#__PURE__*/_jsxDEV(TvIcon, {\n        className: \"star-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 81\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"tv\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"tv\",\n        vote_average: c.vote_average,\n        vote_count: c.vote_count\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Series, \"XK1YKfc94s2l+Ob0biLUcn7v/6s=\", false, function () {\n  return [useGenre];\n});\n\n_c = Series;\nexport default Series;\n\nvar _c;\n\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"sources":["D:/Projects/Web/MoviesUp/react-entertainment-hub/src/Pages/Series/Series.js"],"names":["axios","useEffect","useState","Genres","CustomPagination","SingleContent","useGenre","TvIcon","Series","genres","setGenres","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","fetchSeries","data","get","process","env","REACT_APP_API_KEY","results","total_pages","window","scroll","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average","vote_count"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport \"../Pages.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Genres from \"../../components/Genres/Genres\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\nimport TvIcon from \"@material-ui/icons/Tv\";\r\n\r\nconst Series = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const genreforURL = useGenre(selectedGenres);\r\n\r\n  const fetchSeries = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n    // console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchSeries();\r\n    // eslint-disable-next-line\r\n  }, [genreforURL, page]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"pageTitle\"><TvIcon className=\"star-icon\"/>Discover Series<TvIcon className=\"star-icon\"/></span>\r\n      <Genres\r\n        type=\"tv\"\r\n        selectedGenres={selectedGenres}\r\n        setSelectedGenres={setSelectedGenres}\r\n        genres={genres}\r\n        setGenres={setGenres}\r\n        setPage={setPage}\r\n      />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type=\"tv\"\r\n              vote_average={c.vote_average}\r\n              vote_count={c.vote_count}\r\n            />\r\n          ))}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Series;\r\n"]},"metadata":{},"sourceType":"module"}