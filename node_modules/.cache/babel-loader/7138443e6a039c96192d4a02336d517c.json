{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Web\\\\MoviesUp\\\\megafilms\\\\src\\\\components\\\\Actors\\\\Actors.js\",\n    _s = $RefreshSig$();\n\nimport \"./Actors.css\";\nimport { useParams } from \"react-router-dom\";\nimport { img_300, noPicture, unavailable, unavailableLandscape, img_500 } from \"../../config/config\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Actor = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [actorData, setActor] = useState([]);\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  const fetchActor = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    setActor(data);\n  };\n\n  const fetchActorMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    console.log(data);\n    setMovieCredits(data.cast);\n  };\n\n  useEffect(() => {\n    fetchActor();\n    fetchActorMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actor-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ActorModal\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: actorData.profile_path ? `${img_500}/${actorData.profile_path}` : unavailable,\n          alt: actorData.name,\n          className: \"ActorModal__portrait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: actorData.profile_path ? `${img_500}/${actorData.profile_path}` : unavailableLandscape,\n          alt: actorData.name,\n          className: \"ActorModal__landscape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ActorModal-about\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Actor-name\",\n            children: actorData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"tagline\",\n            children: [actorData.birthday, \" - \", actorData.deathday ? actorData.deathday : \"Alive\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Actor-description\",\n            children: actorData.biography\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Basic-Info-actor\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-tag\",\n                children: \"Occupation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), \" \", actorData.known_for_department]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-tag\",\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this), \" \", actorData.popularity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Basic-Info-actor\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-tag\",\n                children: \"Place of birth:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), \" \", actorData.place_of_birth]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-tag\",\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this), \" \", actorData.gender === 1 ? \"Female\" : \"Male\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"actor-movies-section\",\n        children: [/*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 56\n        }, this), \"Movies played\", /*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trendings\",\n        children: movieCredits && movieCredits.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n          id: c.id,\n          poster: c.poster_path,\n          title: c.title || c.name,\n          date: c.first_air_date || c.release_date,\n          media_type: \"movie\",\n          vote_average: c.vote_average,\n          vote_count: c.vote_count\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Actor, \"UWICdjsDuYkXdNZoOsT9Y5IpyW4=\", false, function () {\n  return [useParams];\n});\n\n_c = Actor;\nexport default Actor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actor\");","map":{"version":3,"sources":["D:/Projects/Web/MoviesUp/megafilms/src/components/Actors/Actors.js"],"names":["useParams","img_300","noPicture","unavailable","unavailableLandscape","img_500","React","useEffect","useState","axios","MovieIcon","SingleContent","Actor","id","actorData","setActor","movieCredits","setMovieCredits","fetchActor","data","get","process","env","REACT_APP_API_KEY","fetchActorMovies","console","log","cast","profile_path","name","birthday","deathday","biography","known_for_department","popularity","place_of_birth","gender","map","c","poster_path","title","first_air_date","release_date","vote_average","vote_count"],"mappings":"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","sourcesContent":["import \"./Actors.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { img_300, noPicture,  unavailable,\r\n    unavailableLandscape, img_500 } from \"../../config/config\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\n\r\n\r\n\r\nconst Actor = () => {\r\n    let { id } = useParams();\r\n    const [actorData, setActor] = useState([]);\r\n    const [movieCredits, setMovieCredits] = useState([]);\r\n\r\n    const fetchActor = async () => {\r\n        const { data } = await axios.get(`https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\r\n\r\n        setActor(data);\r\n    };\r\n\r\n    const fetchActorMovies = async () => {\r\n        const { data } = await axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\r\n        console.log(data);\r\n\r\n        setMovieCredits(data.cast);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchActor();\r\n        fetchActorMovies();\r\n\r\n    }, []);\r\n\r\n            \r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"actor-info\">\r\n              \r\n                <div className=\"ActorModal\">\r\n                <img\r\n                  src={\r\n                    actorData.profile_path? `${img_500}/${actorData.profile_path}`: unavailable\r\n                  }\r\n                  alt={actorData.name}\r\n                  className=\"ActorModal__portrait\"\r\n                />\r\n                <img\r\n                  src={\r\n                    actorData.profile_path ? `${img_500}/${actorData.profile_path}`: unavailableLandscape\r\n                  }\r\n                  alt={actorData.name}\r\n                  className=\"ActorModal__landscape\"\r\n                />\r\n                \r\n                <div className=\"ActorModal-about\">\r\n                    <span className=\"Actor-name\">\r\n                    {actorData.name}\r\n                    </span>\r\n                    {\r\n                    <i className=\"tagline\">{actorData.birthday} - {actorData.deathday ? actorData.deathday: \"Alive\"}</i>\r\n                    }\r\n\r\n                    <span className=\"Actor-description\">\r\n                    {actorData.biography}\r\n                    </span>\r\n\r\n                    <span className=\"Basic-Info-actor\">\r\n                        <span>\r\n                            <span className=\"info-tag\">Occupation:</span> {actorData.known_for_department}\r\n                        </span>\r\n\r\n                        <span>\r\n                            <span className=\"info-tag\">Rating:</span> {actorData.popularity} \r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"Basic-Info-actor\">\r\n                        <span>\r\n                            <span className=\"info-tag\">Place of birth:</span> {actorData.place_of_birth}\r\n                        </span>\r\n\r\n                        <span>\r\n                            <span className=\"info-tag\">Gender:</span> {actorData.gender === 1 ? \"Female\": \"Male\"}\r\n                        </span>\r\n                    </span>\r\n\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span className=\"actor-movies-section\"><MovieIcon/>Movies played<MovieIcon/></span>\r\n                <div className=\"trendings\">\r\n                    {movieCredits &&\r\n                    movieCredits.map((c) => (\r\n                        <SingleContent\r\n                            key={c.id}\r\n                            id={c.id}\r\n                            poster={c.poster_path}\r\n                            title={c.title || c.name}\r\n                            date={c.first_air_date || c.release_date}\r\n                            media_type=\"movie\"\r\n                            vote_average={c.vote_average}\r\n                            vote_count={c.vote_count}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Actor;\r\n"]},"metadata":{},"sourceType":"module"}